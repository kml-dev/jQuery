/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2021-01-28 05:56:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.회원가입;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.PreparedStatement;
import kr.or.ddit.DBConnect;
import java.sql.Connection;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");

	// 클라이언트 요청시 전송되는 데이터 받기
	String id = request.getParameter("mem_id");
	String name = request.getParameter("mem_name");
	String pass = request.getParameter("mem_pass");
	String mail = request.getParameter("mem_mail");
	String hp = request.getParameter("mem_hp");
	String zip = request.getParameter("mem_zip");
	String add1 = request.getParameter("mem_add1");
	String add2 = request.getParameter("mem_add2");
	
	// 1. 드라이버 클래스 로딩
	
	// 2. Connection객체 얻기
	Connection con = DBConnect.getCon();
	
	// 3. 
	String sql = "insert into member (";
		   sql += "mem_id,";
		   sql += "mem_pass,";
		   sql += "mem_name,";
		   sql += "mem_zip,";
		   sql += "mem_add1,";
		   sql += "mem_add2,";
		   sql += "mem_hp,";
		   sql += "mem_mail) values(?,?,?,?,?,?,?,?)";
	
	// 4. sql문장을 실행하기 위한 PreparedStatement 객체 생성
	PreparedStatement stmt = con.prepareStatement(sql);
	stmt.setString(1, id);
	stmt.setString(2, pass);
	stmt.setString(3, name);
	stmt.setString(4, zip);
	stmt.setString(5, add1);
	stmt.setString(6, add2);
	stmt.setString(7, hp);
	stmt.setString(8, mail);
	
	// 실행
	int a = stmt.executeUpdate();
	
	if(a > 0){

      out.write("\r\n");
      out.write("\t{\"sw\" : \"");
      out.print(id );
      out.write("님 가입을 축하합니다\"}\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t{\"sw\" : \"");
      out.print(id );
      out.write("가입실패\"}\r\n");

	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
