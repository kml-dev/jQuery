/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2020-12-21 06:46:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._1221;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>JSP 테스트</title>\r\n");
      out.write("<style>\r\n");
      out.write("\tdiv{\r\n");
      out.write("\t\tbackground : lightblue;\r\n");
      out.write("\t}\r\n");
      out.write("\tspan{\r\n");
      out.write("\t\tcolor : blue;\r\n");
      out.write("\t\tfont-size : 1.5em;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>JSP : Java Server page</h1>\r\n");
      out.write("\t<p>java와 html코드르 혼용해서 기술할 수 있다</p>\r\n");
      out.write("\t<p>front end 역할과 back end 역할을 할 수 있다</p> \r\n");
      out.write("\t<p>자바문자을 기술할 때는 &lt;%  %&gt;기호 사이에 기술한다</p>\r\n");
      out.write("\t<p>자바변수를 출력할 때 &lt;%=변수이름%&gt;</p>\r\n");
      out.write("\t<p>클라이언트에서 데이터 입력 후 전송(제출)하면 jsp파일에서 데이터를 받는다</p>\r\n");
      out.write("\t<p>request내장 객체를 이용해서 값을 받는다</p>\r\n");
      out.write("\t<p>String 변수명 = request.getParameter(\"name\")</p>\r\n");
      out.write("\t\r\n");

	request.setCharacterEncoding("UTF-8");
	String s1 = request.getParameter("name");
	String s2 = request.getParameter("tel");
	String s3 = request.getParameter("pass");

      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("\t<p>당신의 이름은 ");
      out.print( s1 );
      out.write("입니다</p>\r\n");
      out.write("\t<span>");
      out.print( s1 );
      out.write("님 반갑습니다.</span><br>\r\n");
      out.write("\t");
      out.print( s2 );
      out.write("번호로 연락드리겠습니다.<br>\r\n");
      out.write("\t당신의 비밀번호는 ");
      out.print(s3 );
      out.write("입니다.\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
